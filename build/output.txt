0: load_string 0 "assertion"
1: set false
2: discard
3: load_string 10 "name"
4: set false
5: discard
6: load_string 10 "name"
7: get
8: load_string 15 "TEST: "
9: add 0
10: load_string 22 "print"
11: get
12: call 1
13: discard
14: load_string 0 "assertion"
15: get
16: call 0
17: discard
18: load_string 28 "test successful"
19: load_string 22 "print"
20: get
21: call 1
CONSTANTS:
0: assertion
10: name
15: TEST: 
22: print
28: test successful
Deduced flow chart:
Instructions transformations:
load_string ()->('assertion#2)
set ('assertion#2, B#4)->(B#4)
discard (B#4)->()
load_string ()->('name#2)
set ('name#2, D#4)->(D#4)
discard (D#4)->()
load_string ()->('name#2)
get ('name#2)->(F#2)
load_string ()->("TEST: "#2)
add ("TEST: "#2, F#2)->(H#2)
load_string ()->('print#2)
get ('print#2)->(J#2)
call (J#2, H#2)->(K#2)
discard (K#2)->()
load_string ()->('assertion#2)
get ('assertion#2)->(M#2)
call (M#2)->(N#2)
discard (N#2)->()
load_string ()->("test successful"#2)
load_string ()->('print#2)
get ('print#2)->(Q#2)
call (Q#2, "test successful"#2)->(R#2)
end (R#2)->()

Found a set instruction  load_string 0 "assertion"
  set false
  discard
> load_string 10 "name"
> set false
  discard
  load_string 10 "name"
  get
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  load_string 0 "assertion"
  get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Found a corresponding get instruction  load_string 0 "assertion"
  set false
  discard
  load_string 10 "name"
  set false
  discard
> load_string 10 "name"
> get
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  load_string 0 "assertion"
  get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Removing discard instruction after set:
  load_string 0 "assertion"
  set false
  discard
  load_string 10 "name"
  set false
- discard
  load_string 10 "name"
  get
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  load_string 0 "assertion"
  get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
  load_string 0 "assertion"
  set false
  discard
  load_string 10 "name"
  set false
  no_op 0
- load_string 10 "name"
- get
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  load_string 0 "assertion"
  get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Removing set Instruction:
  load_string 0 "assertion"
  set false
  discard
- load_string 10 "name"
- set false
  no_op 0
  no_op 10
  no_op 0
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  load_string 0 "assertion"
  get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Found a set instruction> load_string 0 "assertion"
> set false
  discard
  no_op 10
  no_op 0
  no_op 0
  no_op 10
  no_op 0
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  load_string 0 "assertion"
  get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Found a corresponding get instruction  load_string 0 "assertion"
  set false
  discard
  no_op 10
  no_op 0
  no_op 0
  no_op 10
  no_op 0
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
> load_string 0 "assertion"
> get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Removing discard instruction after set:
  load_string 0 "assertion"
  set false
- discard
  no_op 10
  no_op 0
  no_op 0
  no_op 10
  no_op 0
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  load_string 0 "assertion"
  get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
  load_string 0 "assertion"
  set false
  no_op 0
  no_op 10
  no_op 0
  no_op 0
  no_op 10
  no_op 0
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
- load_string 0 "assertion"
- get
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Removing set Instruction:
- load_string 0 "assertion"
- set false
  no_op 0
  no_op 10
  no_op 0
  no_op 0
  no_op 10
  no_op 0
  load_string 15 "TEST: "
  add 0
  load_string 22 "print"
  get
  call 1
  discard
  no_op 0
  no_op 0
  call 0
  discard
  load_string 28 "test successful"
  load_string 22 "print"
  get
  call 1
Disconnected flow chart:
Instructions transformations:
no_op ()->()
no_op ()->()
no_op ()->()
no_op ()->()
no_op ()->()
no_op ()->()
no_op ()->()
no_op ()->()
load_string ()->("TEST: "#2)
add ("TEST: "#2, D#2)->(H#2)
load_string ()->('print#2)
get ('print#2)->(J#2)
call (J#2, H#2)->(K#2)
discard (K#2)->()
no_op ()->()
no_op ()->()
call (B#2)->(N#2)
discard (N#2)->()
load_string ()->("test successful"#2)
load_string ()->('print#2)
get ('print#2)->(Q#2)
tail_call (Q#2, "test successful"#2)->()
end (any#1)->()


Final flow chart:
Instructions transformations:
load_string ()->("TEST: "#2)
swap (any#2, B#5, D#5)->(B#5, D#5, any#2)
add ("TEST: "#2, D#5)->(H#2)
load_string ()->('print#2)
get ('print#2)->(J#2)
call (J#2, H#2)->(K#2)
discard (K#2)->()
call (B#5)->(N#2)
discard (N#2)->()
load_string ()->("test successful"#2)
load_string ()->('print#2)
get ('print#2)->(Q#2)
tail_call (Q#2, "test successful"#2)->()
end (any#1)->()
0: load_int 1
1: load_string 0 "assert"
2: get
3: call 1
CONSTANTS:
0: assert
Deduced flow chart:
Instructions transformations:
load_int ()->(1#2)
load_string ()->('assert#2)
get ('assert#2)->(C#2)
call (C#2, 1#2)->(D#2)
end (D#2)->()

Disconnected flow chart:
Instructions transformations:
load_int ()->(1#2)
load_string ()->('assert#2)
get ('assert#2)->(C#2)
tail_call (C#2, 1#2)->()
end (any#1)->()


Final flow chart:
Instructions transformations:
load_int ()->(1#2)
load_string ()->('assert#2)
get ('assert#2)->(C#2)
tail_call (C#2, 1#2)->()
end (any#1)->()
TEST: test helper function
test successful
0: load_int 1
1: load_string 0 "a"
2: set false
3: discard
4: load_int 5
5: load_string 2 "b"
6: set false
7: discard
8: load_int 8
9: load_string 4 "c"
10: set false
11: discard
12: load_string 2 "b"
13: get
14: load_string 4 "c"
15: get
16: load_string 0 "a"
17: get
18: load_string 2 "b"
19: get
20: load_string 2 "b"
21: get
22: load_string 0 "a"
23: get
24: load_string 0 "a"
25: get
26: add 0
27: add 0
28: add 0
29: add 0
30: add 0
31: add 0
32: load_int 26
33: load_string 6 "assert_equal"
34: get
35: call 2
CONSTANTS:
0: a
2: b
4: c
6: assert_equal
Deduced flow chart:
Instructions transformations:
load_int ()->(1#4)
load_string ()->('a#2)
set ('a#2, 1#4)->(1#4)
discard (1#4)->()
load_int ()->(5#4)
load_string ()->('b#2)
set ('b#2, 5#4)->(5#4)
discard (5#4)->()
load_int ()->(8#4)
load_string ()->('c#2)
set ('c#2, 8#4)->(8#4)
discard (8#4)->()
load_string ()->('b#2)
get ('b#2)->(H#2)
load_string ()->('c#2)
get ('c#2)->(J#2)
load_string ()->('a#2)
get ('a#2)->(L#2)
load_string ()->('b#2)
get ('b#2)->(N#2)
load_string ()->('b#2)
get ('b#2)->(P#2)
load_string ()->('a#2)
get ('a#2)->(R#2)
load_string ()->('a#2)
get ('a#2)->(T#2)
add (T#2, R#2)->(U#2)
add (U#2, P#2)->(V#2)
add (V#2, N#2)->(W#2)
add (W#2, L#2)->(X#2)
add (X#2, J#2)->(Y#2)
add (Y#2, H#2)->(AB#2)
load_int ()->(26#2)
load_string ()->('assert_equal#2)
get ('assert_equal#2)->(DB#2)
call (DB#2, 26#2, AB#2)->(EB#2)
end (EB#2)->()

Found a set instruction  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  discard
  load_int 8
> load_string 4 "c"
> set false
  discard
  load_string 2 "b"
  get
  load_string 4 "c"
  get
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a corresponding get instruction  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  discard
  load_int 8
  load_string 4 "c"
  set false
  discard
  load_string 2 "b"
  get
> load_string 4 "c"
> get
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Removing discard instruction after set:
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  discard
  load_int 8
  load_string 4 "c"
  set false
- discard
  load_string 2 "b"
  get
  load_string 4 "c"
  get
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  discard
  load_int 8
  load_string 4 "c"
  set false
  no_op 0
  load_string 2 "b"
  get
- load_string 4 "c"
- get
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Removing set Instruction:
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  discard
  load_int 8
- load_string 4 "c"
- set false
  no_op 0
  load_string 2 "b"
  get
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a set instruction  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
> load_string 2 "b"
> set false
  discard
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  load_string 2 "b"
  get
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a corresponding get instruction  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  discard
  load_int 8
  no_op 4
  no_op 0
  no_op 0
> load_string 2 "b"
> get
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Removing discard instruction after set:
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
- discard
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  load_string 2 "b"
  get
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  no_op 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
- load_string 2 "b"
- get
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  load_string 2 "b"
  get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a corresponding get instruction  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  no_op 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  load_string 0 "a"
  get
> load_string 2 "b"
> get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Adding double instruction after set:
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  load_string 0 "a"
  get
- load_string 2 "b"
- get
  load_string 2 "b"
  get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a corresponding get instruction  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  no_op 2
  no_op 0
> load_string 2 "b"
> get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Adding double instruction after set:
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  load_string 2 "b"
  set false
  double 0
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  no_op 2
  no_op 0
- load_string 2 "b"
- get
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Removing set Instruction:
  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
- load_string 2 "b"
- set false
  double 0
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  no_op 2
  no_op 0
  no_op 2
  no_op 0
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a set instruction  load_int 1
> load_string 0 "a"
> set false
  discard
  load_int 5
  no_op 2
  no_op 0
  double 0
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  no_op 2
  no_op 0
  no_op 2
  no_op 0
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a corresponding get instruction  load_int 1
  load_string 0 "a"
  set false
  discard
  load_int 5
  no_op 2
  no_op 0
  double 0
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
> load_string 0 "a"
> get
  no_op 2
  no_op 0
  no_op 2
  no_op 0
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Removing discard instruction after set:
  load_int 1
  load_string 0 "a"
  set false
- discard
  load_int 5
  no_op 2
  no_op 0
  double 0
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  load_string 0 "a"
  get
  no_op 2
  no_op 0
  no_op 2
  no_op 0
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
  load_int 1
  load_string 0 "a"
  set false
  no_op 0
  load_int 5
  no_op 2
  no_op 0
  double 0
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
- load_string 0 "a"
- get
  no_op 2
  no_op 0
  no_op 2
  no_op 0
  load_string 0 "a"
  get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Found a corresponding get instruction  load_int 1
  load_string 0 "a"
  set false
  no_op 0
  load_int 5
  no_op 2
  no_op 0
  double 0
  double 0
  load_int 8
  no_op 4
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 4
  no_op 0
  no_op 0
  no_op 0
  no_op 2
  no_op 0
  no_op 2
  no_op 0
> load_string 0 "a"
> get
  load_string 0 "a"
  get
  add 0
  add 0
  add 0
  add 0
  add 0
  add 0
  load_int 26
  load_string 6 "assert_equal"
  get
  call 2
Adding double instruction after set:
  load_int 1
  load_string 0 "a"
 