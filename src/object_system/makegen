#!/bin/sh

source_files=$(find . ! -name "tests.c" -name "*.c");
# remove newlines
source_files=$(echo $source_files | tr '\n' ' ');

# additional files
source_files=$(echo $source_files ../error/error.c);

# take source files and replace their extensions to .o
# remove local path prefixes, because gcc puts them in the main folder
object_files=$(echo $source_files | sed -e "s/\.c/\.o/g" | xargs basename -a);
object_files=$(echo $object_files | tr '\n' ' ');

variables=$(echo "source-files:=$source_files\nobject-files:=$object_files");
# read arguments, this allows for example setting compiler
while [ "$1" != "" ]; do
    # replace = with :=
    argument=$(echo $1 | sed "s/=/:=/g");
    variables=$(echo "$variables\n$argument");
    shift
done

printf "$variables\n" > Makefile ;
cat Makefile.in >> Makefile ;